@startuml
!include ssp.puml

hide stereotypes
skinparam note {
  BorderColor Green
}

ATO_Boundary(atob, "ATO Boundary") {
  Boundary(awsgov, "AWS GovCloud") {
    Boundary(cloudgov, "cloud.gov CSP") {
      Boundary(cg_platform, "cloud.gov Platform") {
        Boundary(cg_cf, "Cloud Foundry") {
        System_Shared(pages, "Pages", "custom")
        System(uaa, "UAA")
        System(dashboard, "Dashboard")
        uaa -[hidden]r- dashboard
        }
        System(elk_customer, "Customer logs", "ELK")
        System(shibboleth, "cloud.gov IDP")
        Db_Inherited(s3logs, "Logs", "S3")
      }
      Boundary(cg_max, "cloud.gov Max") {
        System(max_identity, "Max Identity")
      }
      Boundary(cg_tool, "cloud.gov Platform Tooling") {
        System(concourse, "Concourse", "CI/CD")
        System(bosh, "Tooling Bosh")
      }
      Boundary(cg_common,"cloud.gov Commons") {
        System(gitlab, "GitLab")
        System(elk_platform, "Platform Logs", "ELK")
        System(cg_monitor, "Monitoring")
        System(nessus, "Nessus")
      }
    }
' show the cg_mgmt as down (foundational) to cg_platform
    cg_platform --[hidden]d- cg_tool
    cg_platform --[hidden]d- cg_common
    cg_max -[#blue]->> elk_platform
    cg_max -[#blue]->> gitlab
    cg_platform -[#brown]->> concourse
    cg_platform -[#brown]->> elk_platform

  }
  Boundary(awsew, "AWS E/W") {
    System_Inherited(r53, "Route 53", "DNS")
    System_Inherited(cloudfront, "CDN", "CloudFront")
    r53 -[hidden]d- cloudfront

  }
}

Boundary(gsa, "GSA systems") {
  System(gsa_email, "SMTP relay")
}
Boundary(external, "External systems"){
  System(github, "GitHub")
}
gsa -[hidden]d- external
' cg_cf -->> gsa_email :**transactional_email**\n//<size:$TECHN_FONT_SIZE>[tcp 465 (T)]</size>//




@enduml

